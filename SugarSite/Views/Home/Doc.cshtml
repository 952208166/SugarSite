
@{
    ViewBag.Title =Model.ResultInfo.CurrentType.TypeName+PubConst.SitePrefix;
    Layout = "~/Views/Shared/_Layout.cshtml";
    var type = Model.ResultInfo.DocType;
    var fist = type.Where(it => it.Level == 1).ToList();
}
@using Infrastructure.ViewModels
@using Infrastructure.Pub;
@using SyntacticSugar
@model ResultModel<Doc>
<div class="layui-main site-inline">
    <div class="site-tree">
        <ul class="layui-tree">
            @if (type.IsValuable() && fist.IsValuable())
            {

                foreach (var item in fist)
                {
                    var itemChildren = type.Where(it => item.Id == it.ParentId).ToList();
                    <li><h2>@item.TypeName</h2></li>
                    foreach (var childItem in itemChildren)
                    {
                        <li class="site-tree-noicon @((Model.ResultInfo.CurrentType.Id==childItem.Id).IIF("layui-this",""))">
                            <a href="@Url.Action("Doc",new { typeId=childItem.Id})"><cite>@childItem.TypeName</cite></a>
                        </li>
                    }
                }
            }
        </ul>
    </div>

    <div class="site-content">
       
    </div>
</div>
